import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Header from '../components/header/Header'
import Author from '../components/author/Author'
// import Advert from '../components/advert/Advert'
import Footer from '../components/footer/Footer'
import Tocify from '../components/tocify/tocify.tsx'
// ui
import { Row, Col, Breadcrumb, Affix } from 'antd'
// icon
import { CalendarOutlined, FolderOpenOutlined, FireOutlined } from '@ant-design/icons'
// markdown
import { marked } from 'marked'
import highlightJS from 'highlight.js'
// import MarkNav from 'markdown-navbar'
// ajax
import axios from 'axios'
// CSS
import 'markdown-navbar/dist/navbar.css'
import 'highlight.js/styles/monokai-sublime.css'
// url
import serivePath from '../config/baseUrl'

export default function Details(props) {

  const tocify = new Tocify()
  const renderer = new marked.Renderer();
  
  renderer.heading = function(text, level, raw) {
    const anchor = tocify.add(text, level)
    return `<a id=${anchor} href="#${anchor}" class="anchor-fix">
      <h${level}></h${level}>
    </a>\n`
  }

  marked.setOptions({
    renderer,
    gfm: true,
    // 容错
    pedantic: false,
    // 忽略HTML标签
    sanitize: false,
    // 
    tables: true,
    // 换行符
    breaks: false,
    // 自动渲染列表样式
    smartLists: true,
    smartypants: false,
    highlight: function(code) {
      return highlightJS.highlightAuto(code).value
    }
  })

  const html = marked(props.article_content)

  return (
    <div className={styles.container}>
      <Head>
        <title>HEISMING-{props.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Row className="comm-main" type="flex" justify="center">
        <Col className="comm-left" xs={24} sm={24} md={16} lg={18} xl={14}>
          <div>
            {/* 面包屑导航 */}
            <div className="bread-div">
              <Breadcrumb>
                <Breadcrumb.Item><a href="/">首页</a></Breadcrumb.Item>
                <Breadcrumb.Item><a href="/list">文章列表</a></Breadcrumb.Item>
                <Breadcrumb.Item>{props.title}</Breadcrumb.Item>
              </Breadcrumb>
            </div>
            <div>
              {/* 文章标题 */}
              <div className="detailed-title">
                {props.title}
              </div>
              {/* 文章访问次数，时间，类型 */}
              <div className="list-icon center">
                <span><CalendarOutlined />&nbsp;{props.addTime}&nbsp;</span>
                <span><FolderOpenOutlined />&nbsp;{props.typeName}&nbsp;</span>
                <span><FireOutlined />&nbsp;{props.view_count}人&nbsp;</span>
              </div>
              {/* 文字的介绍内容 makedown格式 */}
              <div 
                className="detailed-content"
                dangerouslySetInnerHTML={{__html: html}}
              > 
              </div>
            </div>
          </div>
        </Col>
        {/* right */}
        <Col className="comm-right" xs={0} sm={0} md={7} lg={5} xl={4}>
          <Author/>
          <div className="detailed-nav comm-box">
            <Affix offsetTop={5} >
              <div className="nav-title">文章目录</div>
              {tocify && tocify.render()}
              {/* <MarkNav
                className="article-menu"
                source={html}
                ordered={false}
              /> */}
            </Affix>
          </div>
          {/* <Advert/> */}
        </Col>
      </Row>
      <Footer/>
    </div>
  )
}

Details.getInitialProps = async(context) => {
  const id = context.query.id
  const promise = new Promise((resolve, reject) => {
    axios(serivePath.getArticleById + id).then(
      res => {
        console.log(res);
        resolve(res.data.data[0])
      }
    )
  })
  return await promise
}